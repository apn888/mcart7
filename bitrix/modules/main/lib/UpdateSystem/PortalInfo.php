<? namespace Bitrix\Main\UpdateSystem;$GLOBALS['____728535968']= array(base64_decode('ZnVu'.'Y3Rpb25fZ'.'X'.'h'.'pc3'.'Rz'),base64_decode('ZGV'.'maW5'.'lZA'.'='.'='),base64_decode('c'.'Ghw'.'dmVyc2lvb'.'g'.'=='),base64_decode('Y2x'.'hc3NfZXhpc3Rz'));if(!function_exists(__NAMESPACE__.'\\___58101633')){function ___58101633($_1377629497){static $_1575443684= false; if($_1575443684 == false) $_1575443684=array(''.'TEl'.'DR'.'U5TRV9LRVk'.'=','bGFu'.'Zw='.'=','d'.'XRm','W'.'Q='.'=','c3'.'RhYmxl','bWF'.'p'.'bg==',''.'c3Rh'.'Ym'.'xlX3Zl'.'cn'.'Npb25zX2'.'9ubHk'.'=',''.'WQ==','Q'.'0FOR1pJ'.'UA==','Z3p'.'j'.'b21wc'.'mVzcw'.'==','WQ='.'=','Tg==',''.'U1VQRF9EQlM=','W'.'EU=','WQ==','Tg='.'=','U1VQ'.'RF'.'9'.'VU'.'lM=','Q'.'0xJRU5U'.'X'.'1NJVEU=','U0V'.'S'.'VkVSX0'.'5BTUU=','c'.'3Bk','b'.'WFp'.'bg==','Y3JjX2NvZGU=','','Z'.'G'.'J2',''.'U1VQR'.'F9WRV'.'I=','VVB'.'EQVRFX1'.'N'.'ZU1R'.'FTV9WRVJTSU9OX0E=','','U1V'.'QRF9TUlM'.'=',''.'UlU=','U1VQRF9DTVA'.'=','Tg='.'=','U1VQRF9TV'.'F'.'M'.'=','UkE'.'=','T'.'ElDRU5T'.'RV9TS'.'UdORUQ=','Q0x'.'JRU5'.'UX1BI'.'UFZFUg==',''.'T'.'kd'.'JT'.'lg'.'=',''.'bWFpbg='.'=','dXBkYX'.'RlX3V'.'zZV9uZ2lueA==','WQ==','U'.'01E','b'.'WF'.'pbg==',''.'d'.'XBkY'.'XR'.'lX'.'3NhZmVfb'.'W9kZQ==','Tg==','VkVS'.'U0lPTg==','VF'.'lQ'.'R'.'U5D','Q0h'.'I'.'Q'.'g==',''.'SFRUUF9IT'.'1NU','Q1NB'.'Qg='.'=','U0'.'V'.'SV'.'kV'.'SX0FERFI=','U'.'1VJRA'.'==','QVBQTElDQVRJT04=','',''.'Y2x1c3Rlcg='.'=',''.'Q0NsdXN0'.'ZXI=',''.'PUFDVElWRQ'.'==','WQ'.'==',''.'L2JpdHJ'.'peC9tb2R1bGV'.'zL21haW4vY'.'2xh'.'c3Nlcy9nZW'.'5l'.'cmFsL3VwZ'.'GF0'.'ZV9j'.'b'.'GllbnQ'.'ucG'.'hw',''.'L'.'Q==','bWFp'.'bg==',''.'Tg='.'=',''.'RA'.'==','RQ==',''.'V'.'A==','Rg==','L2Jp'.'dHJpe'.'C9tb2'.'R1bGVzL21haW4'.'vY2xhc3Nlcy9n'.'ZW5lc'.'mFsL3Vw'.'ZGF0ZV9'.'jbGllbnQucGhw','','L2'.'JpdH'.'J'.'peC'.'9'.'t'.'b2R1bGV'.'zL21haW4vY'.'2xhc3'.'Nlcy9nZ'.'W5lcmF'.'sL3VwZ'.'GF0Z'.'V9'.'j'.'bGll'.'b'.'nQu'.'cGh'.'w','');return base64_decode($_1575443684[$_1377629497]);}}; use Bitrix\Main\Application; use Bitrix\Main\License; use Bitrix\Main\Loader; use Bitrix\Main\SystemException; use Bitrix\Main\SiteTable; class PortalInfo{ private License $_1671232808; public function __construct(){ $this->_1671232808= Application::getInstance()->getLicense();} public function common(): array{ global $DB; return[ ___58101633(0) => $this->_1671232808->getHashLicenseKey(), ___58101633(1) => LANGUAGE_ID, ___58101633(2) => ___58101633(3), ___58101633(4) => \COption::GetOptionString(___58101633(5), ___58101633(6), ___58101633(7)), ___58101633(8) => $GLOBALS['____728535968'][0](___58101633(9))? ___58101633(10): ___58101633(11), ___58101633(12) => $DB->type, ___58101633(13) =>(isset($DB->_2024125676) && $DB->_2024125676)? ___58101633(14): ___58101633(15), ___58101633(16) => $this->_1671232808->getActiveUsersCount(), ___58101633(17) => $_SERVER[___58101633(18)], ___58101633(19) => \COption::GetOptionString(___58101633(20), ___58101633(21), ___58101633(22)), ___58101633(23) => $this->__544976491(), ___58101633(24) => $GLOBALS['____728535968'][1](___58101633(25))? UPDATE_SYSTEM_VERSION_A: ___58101633(26), ___58101633(27) => $this->__1724597002() ?? ___58101633(28), ___58101633(29) => ___58101633(30), ___58101633(31) => $this->__11853430() ?? ___58101633(32), ___58101633(33) => $this->__1508835157(), ___58101633(34) => $GLOBALS['____728535968'][2](), ___58101633(35) => \COption::GetOptionString(___58101633(36), ___58101633(37), ___58101633(38)), ___58101633(39) => \COption::GetOptionString(___58101633(40), ___58101633(41), ___58101633(42)), ___58101633(43) => SM_VERSION, ___58101633(44) => $this->getLicenseType(), ___58101633(45) => $_SERVER[___58101633(46)], ___58101633(47) => $_SERVER[___58101633(48)], ___58101633(49) => $GLOBALS[___58101633(50)]->GetServerUniqID(),];} private function __544976491(): string{ global $DB; $_202251028= $DB->GetVersion(); return $_202251028 !== false? $_202251028: ___58101633(51);} private function __1724597002():?int{ if(Loader::includeModule(___58101633(52)) && $GLOBALS['____728535968'][3](___58101633(53))){ return \CCluster::getServersCount();} return null;} private function __11853430():?int{ return SiteTable::getCount([___58101633(54) => ___58101633(55)]);} private function __1508835157(): string{ require_once(Application::getDocumentRoot(). ___58101633(56)); $_1926947616= \CUpdateClient::getNewLicenseSignedKey(); return $_1926947616.___58101633(57).\COption::GetOptionString(___58101633(58), $_1926947616, ___58101633(59));} public function getLicenseType(): string{ if($this->_1671232808->isDemo()){ return ___58101633(60);} elseif($this->_1671232808->isEncoded()){ return ___58101633(61);} elseif($this->_1671232808->isTimeBound()){ return ___58101633(62);} else{ return ___58101633(63);}} public function getModules(): array{ require_once(Application::getDocumentRoot(). ___58101633(64)); $_2139804259= ___58101633(65); $_975454319= \CUpdateClient::GetCurrentModules($_2139804259); $_1641972432=(\CUpdateExpertMode::isEnabled() && \CUpdateExpertMode::isCorrectModulesStructure([])); if($_1641972432){ $_975454319= \CUpdateExpertMode::processModulesFrom([], $_975454319);} if(!empty($_2139804259)){ throw new SystemException($_2139804259);} return $_975454319;} public function getLanguages(): array{ require_once(Application::getDocumentRoot(). ___58101633(66)); $_2139804259= ___58101633(67); $_1944035396= \CUpdateClient::GetCurrentLanguages($_2139804259); if(!empty($_2139804259)){ throw new SystemException($_2139804259);} return $_1944035396;}}?>